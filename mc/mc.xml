<?xml version="1.0" encoding="UTF-8"?>
<microprocessor name="Telemetory" description="No description set." hide_in_inventory="false" width="3" length="3" id_counter="51" id_counter_node="10" transform_index="0" sym0="0" sym1="32766" sym2="16386" sym3="16386" sym4="19970" sym5="19970" sym6="32766" sym7="3584" sym8="3584" sym9="3584" sym10="32704" sym11="16256" sym12="7936" sym13="3584" sym14="1024" sym15="0">
	<nodes>
		<n id="2" component_id="7" built_slot_index="0">
			<node orientation="0" label="Active" mode="1" type="0" description="" flags="0">
				<position x="0" y="0" z="2"/>
			</node>
		</n>
		<n id="3" component_id="16" built_slot_index="0">
			<node orientation="0" label="Input 1" mode="1" type="1" description="" flags="0">
				<position x="1" y="0" z="2"/>
			</node>
		</n>
		<n id="4" component_id="17" built_slot_index="0">
			<node orientation="0" label="Input 2" mode="1" type="1" description="" flags="0">
				<position x="2" y="0" z="2"/>
			</node>
		</n>
		<n id="5" component_id="18" built_slot_index="0">
			<node orientation="0" label="Input 3" mode="1" type="1" description="" flags="0">
				<position x="0" y="0" z="1"/>
			</node>
		</n>
		<n id="6" component_id="19" built_slot_index="0">
			<node orientation="0" label="Input 4" mode="1" type="1" description="" flags="0">
				<position x="1" y="0" z="1"/>
			</node>
		</n>
		<n id="7" component_id="20" built_slot_index="0">
			<node orientation="0" label="Input 5" mode="1" type="1" description="" flags="0">
				<position x="2" y="0" z="1"/>
			</node>
		</n>
		<n id="8" component_id="21" built_slot_index="0">
			<node orientation="0" label="Input 6" mode="1" type="1" description="" flags="0">
				<position x="0" y="0" z="0"/>
			</node>
		</n>
		<n id="9" component_id="22" built_slot_index="0">
			<node orientation="0" label="Input 7" mode="1" type="1" description="" flags="0">
				<position x="1" y="0" z="0"/>
			</node>
		</n>
		<n id="10" component_id="23" built_slot_index="0">
			<node orientation="0" label="Input 8" mode="1" type="1" description="" flags="0">
				<position x="2" y="0" z="0"/>
			</node>
		</n>
	</nodes>
	<group id="0">
		<pos x="0" y="0"/>
		<data type="0" name="" desc="">
			<inputs/>
			<outputs/>
		</data>
		<components>
			<c type="33">
				<object id="24" n="Active" on="Always" off="Input" v="true">
					<pos x="-3" y="1.75"/>
					<out1 v="false"/>
				</object>
			</c>
			<c type="34">
				<object id="25" n="Port">
					<pos x="-3" y="1.25"/>
					<out1 v="0"/>
					<v text="58592" value="58592"/>
				</object>
			</c>
			<c type="58">
				<object id="26" n="Title" v="telemetory">
					<pos x="-3" y="0.75"/>
				</object>
			</c>
			<c type="19">
				<object id="29" name="Number of Columns">
					<pos x="-3" y="0.25"/>
					<out1 v="0"/>
					<min text="1" value="1"/>
					<max text="8" value="8"/>
					<int text="1" value="1"/>
					<v text="8" value="8"/>
				</object>
			</c>
			<c type="58">
				<object id="30" n="Label 1" v="Input 1">
					<pos x="-1.75" y="1"/>
				</object>
			</c>
			<c type="58">
				<object id="32" n="Label 2" v="Input 2">
					<pos x="-1.75" y="0.5"/>
				</object>
			</c>
			<c type="58">
				<object id="33" n="Label 3" v="Input 3">
					<pos x="-1.75" y="0"/>
				</object>
			</c>
			<c type="58">
				<object id="34" n="Label 4" v="Input 4">
					<pos x="-1.75" y="-0.5"/>
				</object>
			</c>
			<c type="58">
				<object id="35" n="Label 5" v="Input 5">
					<pos x="-1.75" y="-1"/>
				</object>
			</c>
			<c type="58">
				<object id="36" n="Label 6" v="Input 6">
					<pos x="-1.75" y="-1.5"/>
				</object>
			</c>
			<c type="58">
				<object id="37" n="Label 7" v="Input 7">
					<pos x="-1.75" y="-2"/>
				</object>
			</c>
			<c type="58">
				<object id="38" n="Label 8" v="Input 8">
					<pos x="-1.75" y="-2.5"/>
				</object>
			</c>
			<c type="41">
				<object id="39" count="1" offset="0">
					<pos x="-0.5" y="1.75"/>
					<inc component_id="0" node_index="0">
						<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
					</inc>
					<in1 component_id="7" node_index="0" v="false"/>
					<out1>
						<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
					</out1>
				</object>
			</c>
			<c type="40">
				<object id="40" count="8" offset="0">
					<pos x="0.75" y="0"/>
					<inc component_id="39" node_index="0">
						<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
					</inc>
					<in1 component_id="16" node_index="0" v="0"/>
					<in2 component_id="17" node_index="0" v="0"/>
					<in3 component_id="18" node_index="0" v="0"/>
					<in4 component_id="19" node_index="0" v="0"/>
					<in5 component_id="20" node_index="0" v="0"/>
					<in6 component_id="21" node_index="0" v="0"/>
					<in7 component_id="22" node_index="0" v="0"/>
					<in8 component_id="23" node_index="0" v="0"/>
					<out1>
						<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
					</out1>
				</object>
			</c>
			<c type="56">
				<object id="41" script='function init()
	-- property --
	p_active = property.getBool(&apos;Active&apos;)
	p_port = property.getNumber(&apos;Port&apos;)
	p_title = property.getText(&apos;Title&apos;)
	p_numcol = property.getNumber(&apos;Number of Columns&apos;)

	p_label = {}
	for i = 1, p_numcol do
		p_label[i] = property.getText(&apos;Label &apos; .. string.format(&apos;%d&apos;, i))
	end

	-- global --
	g_active = false
	g_tick = 0

	g_header = {&apos;&apos;}
	for i = 1, p_numcol do
		local label = p_label[i]
		label = encodeCSVField(label)
		table.insert(g_header, label)
	end
	g_header = table.concat(g_header, &apos;,&apos;)

	g_client = buildClient()
	g_client[&apos;sender&apos;][&apos;port&apos;] = p_port
end

function onTick()
	-- active --
	local active = input.getBool(1)
	if g_active ~= (p_active or active) then
		g_active = p_active or active
		if g_active then
			g_client.new(p_title)
			g_client.write(g_header)
		end
	end

	-- write --
	if g_active then
		local buf = {string.format(&apos;%d&apos;, g_tick)}
		for i = 1, p_numcol do
			local num = input.getNumber(i)
			table.insert(buf, string.format(&apos;%G&apos;, num))
		end
		buf = table.concat(buf, &apos;,&apos;)
		g_client.write(buf)
	end

	-- tick --
	if g_active then
		g_tick = g_tick + 1
	else
		g_tick = 0
	end
end


function httpReply(port, request, response)
	g_client[&apos;sender&apos;].httpReply(port, request, response)
end

function encodeCSVField(s)
	if string.match(s, &apos;[\n",]&apos;) ~= fail then
		s = string.gsub(s, &apos;"&apos;, &apos;""&apos;)
		s = &apos;"&apos; .. s .. &apos;"&apos;
	end
	return s
end

function buildClient()
	local client = {
		[&apos;sender&apos;] = buildSender(),
	}

	function client.new(title)
		title = string.gsub(title, &apos;\n&apos;, &apos;&apos;)
		client[&apos;sender&apos;].send(&apos;n&apos; .. title .. &apos;\n&apos;)
	end

	function client.write(s)
		s = string.gsub(s, &apos;\n&apos;, &apos;&apos;)
		client[&apos;sender&apos;].send(&apos;w&apos; .. s .. &apos;\n&apos;)
	end

	return client
end

function buildSender()
	local sender = {
		[&apos;port&apos;] = 58592,
		[&apos;_buf&apos;] = {},
		[&apos;_sending&apos;] = false,
	}

	function sender.send(s)
		table.insert(sender[&apos;_buf&apos;], s)
		if not sender[&apos;_sending&apos;] then
			sender._send()
		end
	end

	function sender.httpReply(port, request, reply)
		if port ~= sender[&apos;port&apos;] then
			return
		end
		sender[&apos;_sending&apos;] = false
		if #sender[&apos;_buf&apos;] &gt; 0 then
			sender._send()
		end
	end

	function sender._send()
		local buf = table.concat(sender[&apos;_buf&apos;])
		async.httpGet(sender[&apos;port&apos;], buf)
		sender[&apos;_buf&apos;] = {}
		sender[&apos;_sending&apos;] = true
	end

	return sender
end

init()
'>
					<pos x="2" y="1.75"/>
					<in1 component_id="40" node_index="0">
						<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
					</in1>
					<in2 component_id="0" node_index="0">
						<v/>
					</in2>
					<out1>
						<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
					</out1>
					<out2>
						<v/>
					</out2>
				</object>
			</c>
			<c type="43">
				<object id="44" l="Input 1" m="0">
					<pos x="2" y="0.75"/>
					<in1 component_id="16" node_index="0" v="0"/>
					<in2 component_id="0" node_index="0" v="false"/>
				</object>
			</c>
			<c type="43">
				<object id="45" l="Input 2" m="0">
					<pos x="2" y="0.25"/>
					<in1 component_id="17" node_index="0" v="0"/>
					<in2 component_id="0" node_index="0" v="false"/>
				</object>
			</c>
			<c type="43">
				<object id="46" l="Input 3" m="0">
					<pos x="2" y="-0.25"/>
					<in1 component_id="18" node_index="0" v="0"/>
					<in2 component_id="0" node_index="0" v="false"/>
				</object>
			</c>
			<c type="43">
				<object id="47" l="Input 4" m="0">
					<pos x="2" y="-0.75"/>
					<in1 component_id="19" node_index="0" v="0"/>
					<in2 component_id="0" node_index="0" v="false"/>
				</object>
			</c>
			<c type="43">
				<object id="48" l="Input 5" m="0">
					<pos x="2" y="-1.25"/>
					<in1 component_id="20" node_index="0" v="0"/>
					<in2 component_id="0" node_index="0" v="false"/>
				</object>
			</c>
			<c type="43">
				<object id="49" l="Input 6" m="0">
					<pos x="2" y="-1.75"/>
					<in1 component_id="21" node_index="0" v="0"/>
					<in2 component_id="0" node_index="0" v="false"/>
				</object>
			</c>
			<c type="43">
				<object id="50" l="Input 7" m="0">
					<pos x="2" y="-2.25"/>
					<in1 component_id="22" node_index="0" v="0"/>
					<in2 component_id="0" node_index="0" v="false"/>
				</object>
			</c>
			<c type="43">
				<object id="51" l="Input 8" m="0">
					<pos x="2" y="-2.75"/>
					<in1 component_id="23" node_index="0" v="0"/>
					<in2 component_id="0" node_index="0" v="false"/>
				</object>
			</c>
		</components>
		<components_bridge>
			<c type="0">
				<object id="7">
					<pos x="-1.75" y="1.75"/>
					<in1 component_id="0" node_index="0" v="false"/>
					<out1 v="false"/>
				</object>
			</c>
			<c type="2">
				<object id="16">
					<pos x="-0.5" y="1"/>
					<in1 component_id="0" node_index="0" v="0"/>
					<out1 v="0"/>
				</object>
			</c>
			<c type="2">
				<object id="17">
					<pos x="-0.5" y="0.5"/>
					<in1 component_id="0" node_index="0" v="0"/>
					<out1 v="0"/>
				</object>
			</c>
			<c type="2">
				<object id="18">
					<pos x="-0.5" y="0"/>
					<in1 component_id="0" node_index="0" v="0"/>
					<out1 v="0"/>
				</object>
			</c>
			<c type="2">
				<object id="19">
					<pos x="-0.5" y="-0.5"/>
					<in1 component_id="0" node_index="0" v="0"/>
					<out1 v="0"/>
				</object>
			</c>
			<c type="2">
				<object id="20">
					<pos x="-0.5" y="-1"/>
					<in1 component_id="0" node_index="0" v="0"/>
					<out1 v="0"/>
				</object>
			</c>
			<c type="2">
				<object id="21">
					<pos x="-0.5" y="-1.5"/>
					<in1 component_id="0" node_index="0" v="0"/>
					<out1 v="0"/>
				</object>
			</c>
			<c type="2">
				<object id="22">
					<pos x="-0.5" y="-2"/>
					<in1 component_id="0" node_index="0" v="0"/>
					<out1 v="0"/>
				</object>
			</c>
			<c type="2">
				<object id="23">
					<pos x="-0.5" y="-2.5"/>
					<in1 component_id="0" node_index="0" v="0"/>
					<out1 v="0"/>
				</object>
			</c>
		</components_bridge>
		<groups/>
		<component_states>
			<c0 id="24" n="Active" on="Always" off="Input" v="true">
				<pos x="-3" y="1.75"/>
				<out1 v="false"/>
			</c0>
			<c1 id="25" n="Port">
				<pos x="-3" y="1.25"/>
				<out1 v="0"/>
				<v text="58592" value="58592"/>
			</c1>
			<c2 id="26" n="Title" v="telemetory">
				<pos x="-3" y="0.75"/>
			</c2>
			<c3 id="29" name="Number of Columns">
				<pos x="-3" y="0.25"/>
				<out1 v="0"/>
				<min text="1" value="1"/>
				<max text="8" value="8"/>
				<int text="1" value="1"/>
				<v text="8" value="8"/>
			</c3>
			<c4 id="30" n="Label 1" v="Input 1">
				<pos x="-1.75" y="1"/>
			</c4>
			<c5 id="32" n="Label 2" v="Input 2">
				<pos x="-1.75" y="0.5"/>
			</c5>
			<c6 id="33" n="Label 3" v="Input 3">
				<pos x="-1.75" y="0"/>
			</c6>
			<c7 id="34" n="Label 4" v="Input 4">
				<pos x="-1.75" y="-0.5"/>
			</c7>
			<c8 id="35" n="Label 5" v="Input 5">
				<pos x="-1.75" y="-1"/>
			</c8>
			<c9 id="36" n="Label 6" v="Input 6">
				<pos x="-1.75" y="-1.5"/>
			</c9>
			<c10 id="37" n="Label 7" v="Input 7">
				<pos x="-1.75" y="-2"/>
			</c10>
			<c11 id="38" n="Label 8" v="Input 8">
				<pos x="-1.75" y="-2.5"/>
			</c11>
			<c12 id="39" count="1" offset="0">
				<pos x="-0.5" y="1.75"/>
				<inc component_id="0" node_index="0">
					<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
				</inc>
				<in1 component_id="7" node_index="0" v="false"/>
				<out1>
					<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
				</out1>
			</c12>
			<c13 id="40" count="8" offset="0">
				<pos x="0.75" y="0"/>
				<inc component_id="39" node_index="0">
					<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
				</inc>
				<in1 component_id="16" node_index="0" v="0"/>
				<in2 component_id="17" node_index="0" v="0"/>
				<in3 component_id="18" node_index="0" v="0"/>
				<in4 component_id="19" node_index="0" v="0"/>
				<in5 component_id="20" node_index="0" v="0"/>
				<in6 component_id="21" node_index="0" v="0"/>
				<in7 component_id="22" node_index="0" v="0"/>
				<in8 component_id="23" node_index="0" v="0"/>
				<out1>
					<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
				</out1>
			</c13>
			<c14 id="41" script='function init()
	-- property --
	p_active = property.getBool(&apos;Active&apos;)
	p_port = property.getNumber(&apos;Port&apos;)
	p_title = property.getText(&apos;Title&apos;)
	p_numcol = property.getNumber(&apos;Number of Columns&apos;)

	p_label = {}
	for i = 1, p_numcol do
		p_label[i] = property.getText(&apos;Label &apos; .. string.format(&apos;%d&apos;, i))
	end

	-- global --
	g_active = false
	g_tick = 0

	g_header = {&apos;&apos;}
	for i = 1, p_numcol do
		local label = p_label[i]
		label = encodeCSVField(label)
		table.insert(g_header, label)
	end
	g_header = table.concat(g_header, &apos;,&apos;)

	g_client = buildClient()
	g_client[&apos;sender&apos;][&apos;port&apos;] = p_port
end

function onTick()
	-- active --
	local active = input.getBool(1)
	if g_active ~= (p_active or active) then
		g_active = p_active or active
		if g_active then
			g_client.new(p_title)
			g_client.write(g_header)
		end
	end

	-- write --
	if g_active then
		local buf = {string.format(&apos;%d&apos;, g_tick)}
		for i = 1, p_numcol do
			local num = input.getNumber(i)
			table.insert(buf, string.format(&apos;%G&apos;, num))
		end
		buf = table.concat(buf, &apos;,&apos;)
		g_client.write(buf)
	end

	-- tick --
	if g_active then
		g_tick = g_tick + 1
	else
		g_tick = 0
	end
end


function httpReply(port, request, response)
	g_client[&apos;sender&apos;].httpReply(port, request, response)
end

function encodeCSVField(s)
	if string.match(s, &apos;[\n",]&apos;) ~= fail then
		s = string.gsub(s, &apos;"&apos;, &apos;""&apos;)
		s = &apos;"&apos; .. s .. &apos;"&apos;
	end
	return s
end

function buildClient()
	local client = {
		[&apos;sender&apos;] = buildSender(),
	}

	function client.new(title)
		title = string.gsub(title, &apos;\n&apos;, &apos;&apos;)
		client[&apos;sender&apos;].send(&apos;n&apos; .. title .. &apos;\n&apos;)
	end

	function client.write(s)
		s = string.gsub(s, &apos;\n&apos;, &apos;&apos;)
		client[&apos;sender&apos;].send(&apos;w&apos; .. s .. &apos;\n&apos;)
	end

	return client
end

function buildSender()
	local sender = {
		[&apos;port&apos;] = 58592,
		[&apos;_buf&apos;] = {},
		[&apos;_sending&apos;] = false,
	}

	function sender.send(s)
		table.insert(sender[&apos;_buf&apos;], s)
		if not sender[&apos;_sending&apos;] then
			sender._send()
		end
	end

	function sender.httpReply(port, request, reply)
		if port ~= sender[&apos;port&apos;] then
			return
		end
		sender[&apos;_sending&apos;] = false
		if #sender[&apos;_buf&apos;] &gt; 0 then
			sender._send()
		end
	end

	function sender._send()
		local buf = table.concat(sender[&apos;_buf&apos;])
		async.httpGet(sender[&apos;port&apos;], buf)
		sender[&apos;_buf&apos;] = {}
		sender[&apos;_sending&apos;] = true
	end

	return sender
end

init()
'>
				<pos x="2" y="1.75"/>
				<in1 component_id="40" node_index="0">
					<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
				</in1>
				<in2 component_id="0" node_index="0">
					<v/>
				</in2>
				<out1>
					<v bools="0" 01="0" 02="0" 03="0" 04="0" 05="0" 06="0" 07="0" 08="0" 09="0" 10="0" 11="0" 12="0" 13="0" 14="0" 15="0" 16="0" 17="0" 18="0" 19="0" 20="0" 21="0" 22="0" 23="0" 24="0" 25="0" 26="0" 27="0" 28="0" 29="0" 30="0" 31="0" 32="0"/>
				</out1>
				<out2>
					<v/>
				</out2>
			</c14>
			<c15 id="44" l="Input 1" m="0">
				<pos x="2" y="0.75"/>
				<in1 component_id="16" node_index="0" v="0"/>
				<in2 component_id="0" node_index="0" v="false"/>
			</c15>
			<c16 id="45" l="Input 2" m="0">
				<pos x="2" y="0.25"/>
				<in1 component_id="17" node_index="0" v="0"/>
				<in2 component_id="0" node_index="0" v="false"/>
			</c16>
			<c17 id="46" l="Input 3" m="0">
				<pos x="2" y="-0.25"/>
				<in1 component_id="18" node_index="0" v="0"/>
				<in2 component_id="0" node_index="0" v="false"/>
			</c17>
			<c18 id="47" l="Input 4" m="0">
				<pos x="2" y="-0.75"/>
				<in1 component_id="19" node_index="0" v="0"/>
				<in2 component_id="0" node_index="0" v="false"/>
			</c18>
			<c19 id="48" l="Input 5" m="0">
				<pos x="2" y="-1.25"/>
				<in1 component_id="20" node_index="0" v="0"/>
				<in2 component_id="0" node_index="0" v="false"/>
			</c19>
			<c20 id="49" l="Input 6" m="0">
				<pos x="2" y="-1.75"/>
				<in1 component_id="21" node_index="0" v="0"/>
				<in2 component_id="0" node_index="0" v="false"/>
			</c20>
			<c21 id="50" l="Input 7" m="0">
				<pos x="2" y="-2.25"/>
				<in1 component_id="22" node_index="0" v="0"/>
				<in2 component_id="0" node_index="0" v="false"/>
			</c21>
			<c22 id="51" l="Input 8" m="0">
				<pos x="2" y="-2.75"/>
				<in1 component_id="23" node_index="0" v="0"/>
				<in2 component_id="0" node_index="0" v="false"/>
			</c22>
		</component_states>
		<component_bridge_states>
			<c0 id="7">
				<pos x="-1.75" y="1.75"/>
				<in1 component_id="0" node_index="0" v="false"/>
				<out1 v="false"/>
			</c0>
			<c1 id="16">
				<pos x="-0.5" y="1"/>
				<in1 component_id="0" node_index="0" v="0"/>
				<out1 v="0"/>
			</c1>
			<c2 id="17">
				<pos x="-0.5" y="0.5"/>
				<in1 component_id="0" node_index="0" v="0"/>
				<out1 v="0"/>
			</c2>
			<c3 id="18">
				<pos x="-0.5" y="0"/>
				<in1 component_id="0" node_index="0" v="0"/>
				<out1 v="0"/>
			</c3>
			<c4 id="19">
				<pos x="-0.5" y="-0.5"/>
				<in1 component_id="0" node_index="0" v="0"/>
				<out1 v="0"/>
			</c4>
			<c5 id="20">
				<pos x="-0.5" y="-1"/>
				<in1 component_id="0" node_index="0" v="0"/>
				<out1 v="0"/>
			</c5>
			<c6 id="21">
				<pos x="-0.5" y="-1.5"/>
				<in1 component_id="0" node_index="0" v="0"/>
				<out1 v="0"/>
			</c6>
			<c7 id="22">
				<pos x="-0.5" y="-2"/>
				<in1 component_id="0" node_index="0" v="0"/>
				<out1 v="0"/>
			</c7>
			<c8 id="23">
				<pos x="-0.5" y="-2.5"/>
				<in1 component_id="0" node_index="0" v="0"/>
				<out1 v="0"/>
			</c8>
		</component_bridge_states>
		<group_states/>
	</group>
</microprocessor>

